<?php
/**
 * MediaMosa is a Full Featured, Webservice Oriented Media Management and
 * Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2012 SURFnet BV (http://www.surfnet.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * The main module file for MediaMosa Site Builder.
 */

/**
 * Implements hook_menu().
 *
 * Here we set up the URLs (menu entries) for the
 * form examples. Note that most of the menu items
 * have page callbacks and page arguments set, with
 * page arguments set to be functions in external files.
 */
function mediamosa_sb_menu() {
  $items = array();

  $items['asset/upload'] = array(
    'title' => 'Upload',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_sb_asset_upload_form'),
    'description' => 'Upload a new video.',
    'type' => MENU_NORMAL_ITEM,
    'file' => 'mediamosa_sb.asset.inc',
    'access callback' => TRUE,
  );

  $items['asset/upload/edit/%/%'] = array(
    'title' => 'Edit asset',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_sb_asset_upload_steps_form', 3, 4),
    'access callback' => TRUE,
    'description' => 'Edit the properties of the video',
    'type' => MENU_CALLBACK,
    'visible' => FALSE,
    'file' => 'mediamosa_sb.asset.inc',
  );

  $items['asset/edit/%'] = array(
    'title' => 'Info',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_sb_asset_edit_metadata_form', 2),
    'access callback' => TRUE,
    'description' => 'Edit metadata of the asset.',
    'type' => MENU_CALLBACK,
    'file' => 'mediamosa_sb.asset.inc',
    'weight' => -6,
  );
  $items['asset/edit/%/info'] = array(
    'title' => 'Info',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -6,
  );

  $items['asset/edit/%/access'] = array(
    'title' => 'Access',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_sb_asset_edit_access_form', 2),
    'access callback' => TRUE,
    'description' => 'Edit metadata of the asset.',
    'type' => MENU_LOCAL_TASK,
    'file' => 'mediamosa_sb.asset.inc',
    'weight' => -4,
  );

  $items['asset/edit/%/media'] = array(
    'title' => 'Video',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_sb_asset_edit_media_form', 2),
    'access callback' => TRUE,
    'description' => 'Control the transcode and stills of the asset.',
    'type' => MENU_LOCAL_TASK,
    'file' => 'mediamosa_sb.asset.inc',
    'weight' => -4,
  );

  $items['collection/add'] = array(
    'title' => 'Add collection',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_sb_collection_add_form'),
    'access callback' => TRUE,
    'description' => 'Edit the properties of the collection.',
    'type' => MENU_NORMAL_ITEM,
    'file' => 'mediamosa_sb.collection.inc',
  );

  $items['collection/edit/%'] = array(
    'title' => 'Edit collection',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_sb_collection_edit_form', 2),
    'access callback' => TRUE,
    'description' => 'Edit the properties of the collection.',
    'type' => MENU_NORMAL_ITEM,
    'file' => 'mediamosa_sb.collection.inc',
  );

  $items['collection/delete/%'] = array(
    'title' => 'Delete collection',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_sb_collection_delete_confirm_form', 2),
    'access callback' => TRUE,
    'description' => 'Delete the collection, but not the assets.',
    'type' => MENU_NORMAL_ITEM,
    'file' => 'mediamosa_sb.collection.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function mediamosa_sb_theme() {
  return array(
    'mediamosa_sb_profile_select' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Custom theme for profile.
 *
 * @param type $variables
 * @return type
 */
function theme_mediamosa_sb_profile_select($variables) {

  $element = $variables['element'];

  $element += array(
    '#empty' => t('No profiles found.'),
  );

  $rows = array();
  $header = array(
    'active' => t('Active'),
    'profile' => t('Profile'),
    'downloadable' => t('Downloadable'),
  );

  if (!empty($element['#options'])) {
    foreach ($element['#options'] as $option) {
      $row = array();

      // Checkbox select transcode.
      $checkbox = array(
        '#name' => 'active_' . $option['profile_id'],
        '#type' => 'checkbox',
        '#value' => $option['active'],
      );
      $row[] = array('data' => drupal_render($checkbox));

      // Title.
      $row[] = array('data' => check_plain($option['title']));


      // Checkbox select transcode.
      $checkbox = array(
        '#name' => 'downloadable_' . $option['profile_id'],
        '#type' => 'checkbox',
        '#value' => $option['active'],
      );
      $row[] = array('data' => drupal_render($checkbox));

      $rows[] = $row;
    }
  }

  return theme('table', array('header' => $header, 'rows' => $rows, 'empty' => $element['#empty'], 'attributes' => $element['#attributes']));
}
